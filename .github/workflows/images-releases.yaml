name: Image Release Build

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+

jobs:
  build-and-push:
    if: ${{ github.repository == 'cilium/hubble-ui' }}
    environment: release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - name: hubble-ui
            context: .
            dockerfile: ./Dockerfile

          - name: hubble-ui-backend
            context: ./backend
            dockerfile: ./backend/Dockerfile

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Login to DockerHub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.DOCKER_HUB_RELEASE_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_RELEASE_PASSWORD }}

      - name: Login to quay.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME_RELEASE_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD_RELEASE_PASSWORD }}

      - name: Getting image tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF##*/}

      - name: Checkout Source Code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Release Build ${{ matrix.name }}
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        id: docker_build_release
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}
            quay.io/${{ github.repository_owner }}/${{ matrix.name }}-ci:${{ github.sha }}

      - name: Image Release Digest
        shell: bash
        run: |
          mkdir -p image-digest/
          job_name=${{ matrix.name }}
          job_name_capital=${job_name^^}
          job_name_underscored=${job_name_capital//-/_}
          echo "${job_name_underscored}_DIGEST := \"${{ steps.docker_build_release.outputs.digest }}\"" > image-digest/makefile-digest.txt

          echo "### ${{ matrix.name }}" > image-digest/${{ matrix.name }}.txt
          echo "" >> image-digest/${{ matrix.name }}.txt
          echo "\`docker.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_release.outputs.digest }}\`" >> image-digest/${{ matrix.name }}.txt
          echo "\`quay.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ steps.tag.outputs.tag }}@${{ steps.docker_build_release.outputs.digest }}\`" >> image-digest/${{ matrix.name }}.txt
          echo "" >> image-digest/${{ matrix.name }}.txt

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595
        with:
          name: image-digest ${{ matrix.name }}
          path: image-digest
          retention-days: 1

  image-digests:
    if: ${{ github.repository == 'cilium/hubble-ui' }}
    name: Display Digests
    runs-on: ubuntu-22.04
    needs: build-and-push
    steps:
      - name: Getting image tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF##*/}
      - name: Downloading Image Digests
        shell: bash
        run: |
          mkdir -p image-digest/

      - name: Download digests of all images built
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          path: image-digest/

      - name: Image Digests Output
        shell: bash
        run: |
          cd image-digest/
          echo "## Docker Manifests" > ../image-digest-output.txt
          echo "" >> ../image-digest-output.txt
          find -type f -not -name "makefile-digest.txt" | sort | xargs -d '\n' cat >> ../image-digest-output.txt

      - name: Image Makefile Digests
        shell: bash
        run: |
          cd image-digest/
          echo "# File generated by .github/workflows/images-legacy-releases.yaml; DO NOT EDIT." > ../Makefile.digests
          echo "# Copyright "$(date +'%Y')" Authors of Cilium" >> ../Makefile.digests
          echo "# SPDX-License-Identifier: Apache-2.0" >> ../Makefile.digests
          echo "" >> ../Makefile.digests
          find -type f  -name "makefile-digest.txt" | sort | xargs -d '\n' cat >> ../Makefile.digests

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595
        with:
          name: image-digest-output.txt-${{ steps.tag.outputs.tag }}
          path: image-digest-output.txt
          retention-days: 1

      # Upload artifact digests
      - name: Upload artifact digests
        uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595
        with:
          name: Makefile.digests-${{ steps.tag.outputs.tag }}
          path: Makefile.digests
          retention-days: 1
