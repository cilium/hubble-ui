// source: ui/notifications.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var ui_status_pb = require('../ui/status_pb.js');
goog.object.extend(proto, ui_status_pb);
goog.exportSymbol('proto.ui.ConnectionState', null, global);
goog.exportSymbol('proto.ui.DataState', null, global);
goog.exportSymbol('proto.ui.NoPermission', null, global);
goog.exportSymbol('proto.ui.Notification', null, global);
goog.exportSymbol('proto.ui.Notification.NotificationCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ui.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ui.Notification.oneofGroups_);
};
goog.inherits(proto.ui.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ui.Notification.displayName = 'proto.ui.Notification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ui.ConnectionState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ui.ConnectionState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ui.ConnectionState.displayName = 'proto.ui.ConnectionState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ui.DataState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ui.DataState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ui.DataState.displayName = 'proto.ui.DataState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ui.NoPermission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ui.NoPermission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ui.NoPermission.displayName = 'proto.ui.NoPermission';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ui.Notification.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.ui.Notification.NotificationCase = {
  NOTIFICATION_NOT_SET: 0,
  CONN_STATE: 1,
  DATA_STATE: 2,
  STATUS: 3,
  NO_PERMISSION: 4
};

/**
 * @return {proto.ui.Notification.NotificationCase}
 */
proto.ui.Notification.prototype.getNotificationCase = function() {
  return /** @type {proto.ui.Notification.NotificationCase} */(jspb.Message.computeOneofCase(this, proto.ui.Notification.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ui.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.ui.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ui.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    connState: (f = msg.getConnState()) && proto.ui.ConnectionState.toObject(includeInstance, f),
    dataState: (f = msg.getDataState()) && proto.ui.DataState.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && ui_status_pb.GetStatusResponse.toObject(includeInstance, f),
    noPermission: (f = msg.getNoPermission()) && proto.ui.NoPermission.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ui.Notification}
 */
proto.ui.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ui.Notification;
  return proto.ui.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ui.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ui.Notification}
 */
proto.ui.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ui.ConnectionState;
      reader.readMessage(value,proto.ui.ConnectionState.deserializeBinaryFromReader);
      msg.setConnState(value);
      break;
    case 2:
      var value = new proto.ui.DataState;
      reader.readMessage(value,proto.ui.DataState.deserializeBinaryFromReader);
      msg.setDataState(value);
      break;
    case 3:
      var value = new ui_status_pb.GetStatusResponse;
      reader.readMessage(value,ui_status_pb.GetStatusResponse.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.ui.NoPermission;
      reader.readMessage(value,proto.ui.NoPermission.deserializeBinaryFromReader);
      msg.setNoPermission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ui.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ui.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ui.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ui.ConnectionState.serializeBinaryToWriter
    );
  }
  f = message.getDataState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ui.DataState.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      ui_status_pb.GetStatusResponse.serializeBinaryToWriter
    );
  }
  f = message.getNoPermission();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ui.NoPermission.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConnectionState conn_state = 1;
 * @return {?proto.ui.ConnectionState}
 */
proto.ui.Notification.prototype.getConnState = function() {
  return /** @type{?proto.ui.ConnectionState} */ (
    jspb.Message.getWrapperField(this, proto.ui.ConnectionState, 1));
};


/**
 * @param {?proto.ui.ConnectionState|undefined} value
 * @return {!proto.ui.Notification} returns this
*/
proto.ui.Notification.prototype.setConnState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.ui.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ui.Notification} returns this
 */
proto.ui.Notification.prototype.clearConnState = function() {
  return this.setConnState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ui.Notification.prototype.hasConnState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DataState data_state = 2;
 * @return {?proto.ui.DataState}
 */
proto.ui.Notification.prototype.getDataState = function() {
  return /** @type{?proto.ui.DataState} */ (
    jspb.Message.getWrapperField(this, proto.ui.DataState, 2));
};


/**
 * @param {?proto.ui.DataState|undefined} value
 * @return {!proto.ui.Notification} returns this
*/
proto.ui.Notification.prototype.setDataState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.ui.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ui.Notification} returns this
 */
proto.ui.Notification.prototype.clearDataState = function() {
  return this.setDataState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ui.Notification.prototype.hasDataState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetStatusResponse status = 3;
 * @return {?proto.ui.GetStatusResponse}
 */
proto.ui.Notification.prototype.getStatus = function() {
  return /** @type{?proto.ui.GetStatusResponse} */ (
    jspb.Message.getWrapperField(this, ui_status_pb.GetStatusResponse, 3));
};


/**
 * @param {?proto.ui.GetStatusResponse|undefined} value
 * @return {!proto.ui.Notification} returns this
*/
proto.ui.Notification.prototype.setStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.ui.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ui.Notification} returns this
 */
proto.ui.Notification.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ui.Notification.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional NoPermission no_permission = 4;
 * @return {?proto.ui.NoPermission}
 */
proto.ui.Notification.prototype.getNoPermission = function() {
  return /** @type{?proto.ui.NoPermission} */ (
    jspb.Message.getWrapperField(this, proto.ui.NoPermission, 4));
};


/**
 * @param {?proto.ui.NoPermission|undefined} value
 * @return {!proto.ui.Notification} returns this
*/
proto.ui.Notification.prototype.setNoPermission = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.ui.Notification.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ui.Notification} returns this
 */
proto.ui.Notification.prototype.clearNoPermission = function() {
  return this.setNoPermission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ui.Notification.prototype.hasNoPermission = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ui.ConnectionState.prototype.toObject = function(opt_includeInstance) {
  return proto.ui.ConnectionState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ui.ConnectionState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.ConnectionState.toObject = function(includeInstance, msg) {
  var f, obj = {
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    reconnecting: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    k8sUnavailable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    k8sConnected: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ui.ConnectionState}
 */
proto.ui.ConnectionState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ui.ConnectionState;
  return proto.ui.ConnectionState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ui.ConnectionState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ui.ConnectionState}
 */
proto.ui.ConnectionState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReconnecting(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setK8sUnavailable(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setK8sConnected(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ui.ConnectionState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ui.ConnectionState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ui.ConnectionState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.ConnectionState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getReconnecting();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getK8sUnavailable();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getK8sConnected();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool connected = 1;
 * @return {boolean}
 */
proto.ui.ConnectionState.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ui.ConnectionState} returns this
 */
proto.ui.ConnectionState.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool reconnecting = 2;
 * @return {boolean}
 */
proto.ui.ConnectionState.prototype.getReconnecting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ui.ConnectionState} returns this
 */
proto.ui.ConnectionState.prototype.setReconnecting = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool k8s_unavailable = 3;
 * @return {boolean}
 */
proto.ui.ConnectionState.prototype.getK8sUnavailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ui.ConnectionState} returns this
 */
proto.ui.ConnectionState.prototype.setK8sUnavailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool k8s_connected = 4;
 * @return {boolean}
 */
proto.ui.ConnectionState.prototype.getK8sConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ui.ConnectionState} returns this
 */
proto.ui.ConnectionState.prototype.setK8sConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ui.DataState.prototype.toObject = function(opt_includeInstance) {
  return proto.ui.DataState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ui.DataState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.DataState.toObject = function(includeInstance, msg) {
  var f, obj = {
    noActivity: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ui.DataState}
 */
proto.ui.DataState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ui.DataState;
  return proto.ui.DataState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ui.DataState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ui.DataState}
 */
proto.ui.DataState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ui.DataState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ui.DataState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ui.DataState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.DataState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNoActivity();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool no_activity = 1;
 * @return {boolean}
 */
proto.ui.DataState.prototype.getNoActivity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ui.DataState} returns this
 */
proto.ui.DataState.prototype.setNoActivity = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ui.NoPermission.prototype.toObject = function(opt_includeInstance) {
  return proto.ui.NoPermission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ui.NoPermission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.NoPermission.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ui.NoPermission}
 */
proto.ui.NoPermission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ui.NoPermission;
  return proto.ui.NoPermission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ui.NoPermission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ui.NoPermission}
 */
proto.ui.NoPermission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ui.NoPermission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ui.NoPermission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ui.NoPermission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ui.NoPermission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string resource = 1;
 * @return {string}
 */
proto.ui.NoPermission.prototype.getResource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ui.NoPermission} returns this
 */
proto.ui.NoPermission.prototype.setResource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.ui.NoPermission.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ui.NoPermission} returns this
 */
proto.ui.NoPermission.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.ui);
