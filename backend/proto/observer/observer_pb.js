// source: observer/observer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var flow_flow_pb = require('../flow/flow_pb.js');
goog.object.extend(proto, flow_flow_pb);
var relay_relay_pb = require('../relay/relay_pb.js');
goog.object.extend(proto, relay_relay_pb);
goog.exportSymbol('proto.observer.GetFlowsRequest', null, global);
goog.exportSymbol('proto.observer.GetFlowsResponse', null, global);
goog.exportSymbol('proto.observer.GetFlowsResponse.ResponseTypesCase', null, global);
goog.exportSymbol('proto.observer.ServerStatusRequest', null, global);
goog.exportSymbol('proto.observer.ServerStatusResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.observer.ServerStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.observer.ServerStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.observer.ServerStatusRequest.displayName = 'proto.observer.ServerStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.observer.ServerStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.observer.ServerStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.observer.ServerStatusResponse.displayName = 'proto.observer.ServerStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.observer.GetFlowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.observer.GetFlowsRequest.repeatedFields_, null);
};
goog.inherits(proto.observer.GetFlowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.observer.GetFlowsRequest.displayName = 'proto.observer.GetFlowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.observer.GetFlowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.observer.GetFlowsResponse.oneofGroups_);
};
goog.inherits(proto.observer.GetFlowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.observer.GetFlowsResponse.displayName = 'proto.observer.GetFlowsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.observer.ServerStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.observer.ServerStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.observer.ServerStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.ServerStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.observer.ServerStatusRequest}
 */
proto.observer.ServerStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.observer.ServerStatusRequest;
  return proto.observer.ServerStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.observer.ServerStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.observer.ServerStatusRequest}
 */
proto.observer.ServerStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.observer.ServerStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.observer.ServerStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.observer.ServerStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.ServerStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.observer.ServerStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.observer.ServerStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.observer.ServerStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.ServerStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    numFlows: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxFlows: jspb.Message.getFieldWithDefault(msg, 2, 0),
    seenFlows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uptimeNs: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.observer.ServerStatusResponse}
 */
proto.observer.ServerStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.observer.ServerStatusResponse;
  return proto.observer.ServerStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.observer.ServerStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.observer.ServerStatusResponse}
 */
proto.observer.ServerStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumFlows(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxFlows(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeenFlows(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUptimeNs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.observer.ServerStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.observer.ServerStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.observer.ServerStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.ServerStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumFlows();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMaxFlows();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSeenFlows();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getUptimeNs();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 num_flows = 1;
 * @return {number}
 */
proto.observer.ServerStatusResponse.prototype.getNumFlows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.observer.ServerStatusResponse} returns this
 */
proto.observer.ServerStatusResponse.prototype.setNumFlows = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 max_flows = 2;
 * @return {number}
 */
proto.observer.ServerStatusResponse.prototype.getMaxFlows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.observer.ServerStatusResponse} returns this
 */
proto.observer.ServerStatusResponse.prototype.setMaxFlows = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 seen_flows = 3;
 * @return {number}
 */
proto.observer.ServerStatusResponse.prototype.getSeenFlows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.observer.ServerStatusResponse} returns this
 */
proto.observer.ServerStatusResponse.prototype.setSeenFlows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 uptime_ns = 4;
 * @return {number}
 */
proto.observer.ServerStatusResponse.prototype.getUptimeNs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.observer.ServerStatusResponse} returns this
 */
proto.observer.ServerStatusResponse.prototype.setUptimeNs = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.observer.GetFlowsRequest.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.observer.GetFlowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.observer.GetFlowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.observer.GetFlowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.GetFlowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFieldWithDefault(msg, 1, 0),
    follow: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    blacklistList: jspb.Message.toObjectList(msg.getBlacklistList(),
    flow_flow_pb.FlowFilter.toObject, includeInstance),
    whitelistList: jspb.Message.toObjectList(msg.getWhitelistList(),
    flow_flow_pb.FlowFilter.toObject, includeInstance),
    since: (f = msg.getSince()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    until: (f = msg.getUntil()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.observer.GetFlowsRequest}
 */
proto.observer.GetFlowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.observer.GetFlowsRequest;
  return proto.observer.GetFlowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.observer.GetFlowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.observer.GetFlowsRequest}
 */
proto.observer.GetFlowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumber(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFollow(value);
      break;
    case 5:
      var value = new flow_flow_pb.FlowFilter;
      reader.readMessage(value,flow_flow_pb.FlowFilter.deserializeBinaryFromReader);
      msg.addBlacklist(value);
      break;
    case 6:
      var value = new flow_flow_pb.FlowFilter;
      reader.readMessage(value,flow_flow_pb.FlowFilter.deserializeBinaryFromReader);
      msg.addWhitelist(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSince(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUntil(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.observer.GetFlowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.observer.GetFlowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.observer.GetFlowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.GetFlowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getFollow();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBlacklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      flow_flow_pb.FlowFilter.serializeBinaryToWriter
    );
  }
  f = message.getWhitelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      flow_flow_pb.FlowFilter.serializeBinaryToWriter
    );
  }
  f = message.getSince();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUntil();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 number = 1;
 * @return {number}
 */
proto.observer.GetFlowsRequest.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.observer.GetFlowsRequest} returns this
 */
proto.observer.GetFlowsRequest.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool follow = 3;
 * @return {boolean}
 */
proto.observer.GetFlowsRequest.prototype.getFollow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.observer.GetFlowsRequest} returns this
 */
proto.observer.GetFlowsRequest.prototype.setFollow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated flow.FlowFilter blacklist = 5;
 * @return {!Array<!proto.flow.FlowFilter>}
 */
proto.observer.GetFlowsRequest.prototype.getBlacklistList = function() {
  return /** @type{!Array<!proto.flow.FlowFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, flow_flow_pb.FlowFilter, 5));
};


/**
 * @param {!Array<!proto.flow.FlowFilter>} value
 * @return {!proto.observer.GetFlowsRequest} returns this
*/
proto.observer.GetFlowsRequest.prototype.setBlacklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.flow.FlowFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flow.FlowFilter}
 */
proto.observer.GetFlowsRequest.prototype.addBlacklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.flow.FlowFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.observer.GetFlowsRequest} returns this
 */
proto.observer.GetFlowsRequest.prototype.clearBlacklistList = function() {
  return this.setBlacklistList([]);
};


/**
 * repeated flow.FlowFilter whitelist = 6;
 * @return {!Array<!proto.flow.FlowFilter>}
 */
proto.observer.GetFlowsRequest.prototype.getWhitelistList = function() {
  return /** @type{!Array<!proto.flow.FlowFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, flow_flow_pb.FlowFilter, 6));
};


/**
 * @param {!Array<!proto.flow.FlowFilter>} value
 * @return {!proto.observer.GetFlowsRequest} returns this
*/
proto.observer.GetFlowsRequest.prototype.setWhitelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.flow.FlowFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.flow.FlowFilter}
 */
proto.observer.GetFlowsRequest.prototype.addWhitelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.flow.FlowFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.observer.GetFlowsRequest} returns this
 */
proto.observer.GetFlowsRequest.prototype.clearWhitelistList = function() {
  return this.setWhitelistList([]);
};


/**
 * optional google.protobuf.Timestamp since = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.observer.GetFlowsRequest.prototype.getSince = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.observer.GetFlowsRequest} returns this
*/
proto.observer.GetFlowsRequest.prototype.setSince = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.observer.GetFlowsRequest} returns this
 */
proto.observer.GetFlowsRequest.prototype.clearSince = function() {
  return this.setSince(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.observer.GetFlowsRequest.prototype.hasSince = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp until = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.observer.GetFlowsRequest.prototype.getUntil = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.observer.GetFlowsRequest} returns this
*/
proto.observer.GetFlowsRequest.prototype.setUntil = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.observer.GetFlowsRequest} returns this
 */
proto.observer.GetFlowsRequest.prototype.clearUntil = function() {
  return this.setUntil(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.observer.GetFlowsRequest.prototype.hasUntil = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.observer.GetFlowsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.observer.GetFlowsResponse.ResponseTypesCase = {
  RESPONSE_TYPES_NOT_SET: 0,
  FLOW: 1,
  NODE_STATUS: 2
};

/**
 * @return {proto.observer.GetFlowsResponse.ResponseTypesCase}
 */
proto.observer.GetFlowsResponse.prototype.getResponseTypesCase = function() {
  return /** @type {proto.observer.GetFlowsResponse.ResponseTypesCase} */(jspb.Message.computeOneofCase(this, proto.observer.GetFlowsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.observer.GetFlowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.observer.GetFlowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.observer.GetFlowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.GetFlowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    flow: (f = msg.getFlow()) && flow_flow_pb.Flow.toObject(includeInstance, f),
    nodeStatus: (f = msg.getNodeStatus()) && relay_relay_pb.NodeStatusEvent.toObject(includeInstance, f),
    nodeName: jspb.Message.getFieldWithDefault(msg, 1000, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.observer.GetFlowsResponse}
 */
proto.observer.GetFlowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.observer.GetFlowsResponse;
  return proto.observer.GetFlowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.observer.GetFlowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.observer.GetFlowsResponse}
 */
proto.observer.GetFlowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new flow_flow_pb.Flow;
      reader.readMessage(value,flow_flow_pb.Flow.deserializeBinaryFromReader);
      msg.setFlow(value);
      break;
    case 2:
      var value = new relay_relay_pb.NodeStatusEvent;
      reader.readMessage(value,relay_relay_pb.NodeStatusEvent.deserializeBinaryFromReader);
      msg.setNodeStatus(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 1001:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.observer.GetFlowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.observer.GetFlowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.observer.GetFlowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.observer.GetFlowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      flow_flow_pb.Flow.serializeBinaryToWriter
    );
  }
  f = message.getNodeStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      relay_relay_pb.NodeStatusEvent.serializeBinaryToWriter
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional flow.Flow flow = 1;
 * @return {?proto.flow.Flow}
 */
proto.observer.GetFlowsResponse.prototype.getFlow = function() {
  return /** @type{?proto.flow.Flow} */ (
    jspb.Message.getWrapperField(this, flow_flow_pb.Flow, 1));
};


/**
 * @param {?proto.flow.Flow|undefined} value
 * @return {!proto.observer.GetFlowsResponse} returns this
*/
proto.observer.GetFlowsResponse.prototype.setFlow = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.observer.GetFlowsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.observer.GetFlowsResponse} returns this
 */
proto.observer.GetFlowsResponse.prototype.clearFlow = function() {
  return this.setFlow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.observer.GetFlowsResponse.prototype.hasFlow = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional relay.NodeStatusEvent node_status = 2;
 * @return {?proto.relay.NodeStatusEvent}
 */
proto.observer.GetFlowsResponse.prototype.getNodeStatus = function() {
  return /** @type{?proto.relay.NodeStatusEvent} */ (
    jspb.Message.getWrapperField(this, relay_relay_pb.NodeStatusEvent, 2));
};


/**
 * @param {?proto.relay.NodeStatusEvent|undefined} value
 * @return {!proto.observer.GetFlowsResponse} returns this
*/
proto.observer.GetFlowsResponse.prototype.setNodeStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.observer.GetFlowsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.observer.GetFlowsResponse} returns this
 */
proto.observer.GetFlowsResponse.prototype.clearNodeStatus = function() {
  return this.setNodeStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.observer.GetFlowsResponse.prototype.hasNodeStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string node_name = 1000;
 * @return {string}
 */
proto.observer.GetFlowsResponse.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.observer.GetFlowsResponse} returns this
 */
proto.observer.GetFlowsResponse.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


/**
 * optional google.protobuf.Timestamp time = 1001;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.observer.GetFlowsResponse.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1001));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.observer.GetFlowsResponse} returns this
*/
proto.observer.GetFlowsResponse.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1001, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.observer.GetFlowsResponse} returns this
 */
proto.observer.GetFlowsResponse.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.observer.GetFlowsResponse.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1001) != null;
};


goog.object.extend(exports, proto.observer);
